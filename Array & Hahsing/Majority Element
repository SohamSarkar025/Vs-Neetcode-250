Given an array nums of size n, return the majority element.

The majority element is the element that appears more than ⌊n / 2⌋ times. You may assume that the majority element always exists in the array.

 

Example 1:

Input: nums = [3,2,3]
Output: 3
Example 2:

Input: nums = [2,2,1,1,1,2,2]
Output: 2


class Solution {
    public int majorityElement(int[] nums) {
        int n = nums.length;
        //Create a hashmap to store the frequency of each number
        HashMap<Integer,Integer> map = new HashMap<>();
        //for loop to iterate every number in the nums array
        for(int num:nums){
            //Increasing the frequency of each number
            map.put(num,map.getOrDefault(num,0)+1);
            //Check if the frequency is greater than number
            if(map.get(num) > n/2){
                return num;
            }
        }
        //no number is found which frequncy is greater than n/2
        return -1;
    }
}