You are given two strings word1 and word2. Merge the strings by adding letters in alternating order, starting with word1. If a string is longer than the other, append the additional letters onto the end of the merged string.

Return the merged string.

 

Example 1:

Input: word1 = "abc", word2 = "pqr"
Output: "apbqcr"
Explanation: The merged string will be merged as so:
word1:  a   b   c
word2:    p   q   r
merged: a p b q c r
Example 2:

Input: word1 = "ab", word2 = "pqrs"
Output: "apbqrs"
Explanation: Notice that as word2 is longer, "rs" is appended to the end.
word1:  a   b 
word2:    p   q   r   s
merged: a p b q   r   s
Example 3:

Input: word1 = "abcd", word2 = "pq"
Output: "apbqcd"
Explanation: Notice that as word1 is longer, "cd" is appended to the end.
word1:  a   b   c   d
word2:    p   q 
merged: a p b q c   d



class Solution {
    public String mergeAlternately(String word1, String word2) {
        StringBuilder sb = new StringBuilder();
        //initially i and j is 0
        int i=0,j=0;
        //store word1 length in m and word2 length in n
        int m=word1.length(),n=word2.length();
        //while m is greater than i and n is greater than j loop runs
        while( i <m || j<n){
            //if i<m then append every iteration
            if(i<m){
                sb.append(word1.charAt(i));
                i++;
            }
            //if j<n then append every iteration
            if(j<n){
                sb.append(word2.charAt(j));
                j++;
            }
        }
        return sb.toString();
    }
}