Example 1:

Input: numbers = [2,7,11,15], target = 9
Output: [1,2]
Explanation: The sum of 2 and 7 is 9. Therefore, index1 = 1, index2 = 2. We return [1, 2].
Example 2:

Input: numbers = [2,3,4], target = 6
Output: [1,3]
Explanation: The sum of 2 and 4 is 6. Therefore index1 = 1, index2 = 3. We return [1, 3].
Example 3:

Input: numbers = [-1,0], target = -1
Output: [1,2]
Explanation: The sum of -1 and 0 is -1. Therefore index1 = 1, index2 = 2. We return [1, 2].

class Solution {
    public int[] twoSum(int[] numbers, int target) {
        //take i as first index
        int i=0;
        //take j as last index
        int j=numbers.length-1;
        //loop till i < j
        while(i < j){
            //Store the sum 
            int sum=numbers[i]+numbers[j];
            //if sum == target then return i+1 and j+1 as 1 indexed array
            if(sum == target){
                return new int[]{i+1,j+1};
            }
            //As it is a sorted array
            //if sum greater than target then we have to decrease the higher value
            if(sum > target){
                j--;
            }
            //otherwise increase the lower value
            else{
                i++;
            }
        }
        return new int[]{};
    }
}